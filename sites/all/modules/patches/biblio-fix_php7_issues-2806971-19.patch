diff --git a/includes/biblio_theme.inc b/includes/biblio_theme.inc
index c028c7d..fd976d7 100644
--- a/includes/biblio_theme.inc
+++ b/includes/biblio_theme.inc
@@ -241,16 +241,16 @@ function theme_biblio_tabular($variables) {
     if ($row['type'] == 'contrib_widget' && ($authors = biblio_get_contributor_category($node->biblio_contributors, $row['fid']))) {
       $data = biblio_format_authors($authors);
     }
-    elseif (empty ($node->$row['name']) || $row['name'] == 'biblio_coins') {
+    elseif (empty ($node->{$row['name']}) || $row['name'] == 'biblio_coins') {
       continue;
     }
     else {
       switch ($row['name']) {
         case 'biblio_keywords' :
-         $data = _biblio_keyword_links($node->$row['name'], $base);
+         $data = _biblio_keyword_links($node->{$row['name']}, $base);
           break;
         case 'biblio_url' :
-          $data = l($node->$row['name'], $node->$row['name'], $attrib);
+          $data = l($node->{$row['name']}, $node->{$row['name']}, $attrib);
           break;
         case 'biblio_doi' :
            $data = $doi;
@@ -262,10 +262,10 @@ function theme_biblio_tabular($variables) {
               $formats = $node->biblio_formats;
               $format  = isset($formats[$row['name']]) ? $formats[$row['name']] : $format;
             }
-            $data = check_markup($node->$row['name'], $format);
+            $data = check_markup($node->{$row['name']}, $format);
           }
           else {
-            $data = check_plain($node->$row['name']);
+            $data = check_plain($node->{$row['name']});
           }
       }
     }
diff --git a/modules/bibtexParse/PARSECREATORS.php b/modules/bibtexParse/PARSECREATORS.php
index 9b331f3..4f585f6 100644
--- a/modules/bibtexParse/PARSECREATORS.php
+++ b/modules/bibtexParse/PARSECREATORS.php
@@ -6,7 +6,7 @@ class Creators extends PARSECREATORS
     protected    $typeMap            = array();
     private   $md5                = array();

-  function Creators($init = NULL)
+  function __construct($init = NULL)
   {
     $this->buildTypeMap();
     if (is_array($init))
@@ -177,10 +177,6 @@ http://bibliophile.sourceforge.net

 class PARSECREATORS
 {
-  function PARSECREATORS()
-  {
-  }
-
   function parse($input, $type = 'author')
   {
     $input = trim($input);
@@ -219,12 +215,12 @@ class PARSECREATORS
             if (preg_match("/(.*) {([^\\\].*)}/", $value, $matches) &&
          !(preg_match("/(.*) {\\\.{.*}.*}/", $value, $matches2)))
       {
-        $author = split(" ", $matches[1]);
+        $author = preg_split(" ", $matches[1]);
         $surname = $matches[2];
       }
       else
       {
-        $author = split(" ", $value);
+        $author = preg_split(" ", $value);
 // last of array is surname (no prefix if entered correctly)
         $surname = array_pop($author);
       }
@@ -269,7 +265,7 @@ class PARSECREATORS
   function grabFirstnameInitials($remainder)
   {
     $firstname = $initials = '';
-    $array = split(" ", $remainder);
+    $array = preg_split(" ", $remainder);
     foreach ($array as $value)
     {
       $firstChar = substr($value, 0, 1);
@@ -293,7 +289,7 @@ class PARSECREATORS
 // uppercased part means lowercased parts following are part of the surname (e.g. Van den Bussche)
   function grabSurname($input)
   {
-    $surnameArray = split(" ", $input);
+    $surnameArray = preg_split(" ", $input);
     $noPrefix = $surname = FALSE;
     foreach ($surnameArray as $value)
     {
diff --git a/modules/bibtexParse/PARSEENTRIES.php b/modules/bibtexParse/PARSEENTRIES.php
index af9381b..3ff3b54 100644
--- a/modules/bibtexParse/PARSEENTRIES.php
+++ b/modules/bibtexParse/PARSEENTRIES.php
@@ -136,7 +136,7 @@ class PARSEENTRIES
   /**
    * @return unknown_type
    */
-  function PARSEENTRIES()
+  function __construct()
   {
     require_once(drupal_get_path('module', 'biblio_bibtex') . '/transtab_latex_unicode.inc.php');
     $this->transtab_latex_unicode = get_transtab_latex_unicode();
diff --git a/modules/bibtexParse/PARSEMONTH.php b/modules/bibtexParse/PARSEMONTH.php
index 129e9ce..5a0b796 100644
--- a/modules/bibtexParse/PARSEMONTH.php
+++ b/modules/bibtexParse/PARSEMONTH.php
@@ -5,7 +5,7 @@ Do whatever you like with this -- some credit to the author(s) would be apprecia

 A collection of PHP classes to manipulate bibtex files.

-If you make improvements, please consider contacting the administrators at bibliophile.sourceforge.net so
+If you make improvements, please consider contacting the administrators at bibliophile.sourceforge.net so
 that your improvements can be added to the release package.

 Mark Grimshaw 2005
@@ -26,13 +26,13 @@ http://bibliophile.sourceforge.net
 class PARSEMONTH
 {
 // Constructor
-  function PARSEMONTH()
+  function __construct()
   {
   }
   function init($monthField)
   {
     $startMonth = $this->startDay = $endMonth = $this->endDay = FALSE;
-    $date = split("#", $monthField);
+    $date = preg_split("#", $monthField);
     foreach ($date as $field)
     {
       $field = ucfirst(strtolower(trim($field)));
diff --git a/modules/bibtexParse/PARSEPAGE.php b/modules/bibtexParse/PARSEPAGE.php
index 2da85a3..cb64b88 100644
--- a/modules/bibtexParse/PARSEPAGE.php
+++ b/modules/bibtexParse/PARSEPAGE.php
@@ -15,10 +15,6 @@ http://bibliophile.sourceforge.net*/
 *****/
 class PARSEPAGE
 {
-// Constructor
-  function PARSEPAGE()
-  {
-  }
 // Create page arrays from bibtex input.
 // 'pages' field can be:
 //  "77--99"
diff --git a/modules/marcParse/php-marc.php b/modules/marcParse/php-marc.php
index 421d9d4..ee81b25 100644
--- a/modules/marcParse/php-marc.php
+++ b/modules/marcParse/php-marc.php
@@ -192,7 +192,7 @@ Class File {
    * @param string Name of the file
    * @return string Returns warning if issued during read
    */
-  function file($in) {
+  function __construct($in) {
     if (file_exists($in)) {
       $input = file($in);
       $recs = explode(END_OF_RECORD, join("", $input));
@@ -352,7 +352,7 @@ Class USMARC Extends File {
    * Read raw MARC string for decoding
    * @param string Raw MARC
   */
-  function usmarc($string) {
+  function __construct($string) {
     $this->raw[] = $string;
     $this->pointer = 0;
   }
@@ -428,7 +428,7 @@ Class Record {
    *
    * Set all variables to defaults to create new Record object
    */
-  function record() {
+  function __construct() {
     $this->fields = array();
     $this->ldr = str_repeat(' ', 24);
   }
@@ -751,7 +751,7 @@ Class Field {
    * @param array Array ( tagno, ind1, ind2, subfield_data )
    * @return string Returns warnings if any issued during parse
    */
-  function field() {
+  function __construct() {
     $args = func_get_args();

     $tagno = array_shift($args);
diff --git a/modules/rtf/rtf_export.inc b/modules/rtf/rtf_export.inc
index 0fe4597..66cd31c 100644
--- a/modules/rtf/rtf_export.inc
+++ b/modules/rtf/rtf_export.inc
@@ -25,7 +25,7 @@ class rtf {
   var $cm;
   var $mm;

-  function rtf() {
+  function __construct() {
     $this->inch = 1440;
     $this->cm   = 567;
     $this->mm   = 56.7;
